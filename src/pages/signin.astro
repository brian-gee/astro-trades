---
import { app } from '../firebase/server';
import { getAuth } from 'firebase-admin/auth';
import Layout from '../layouts/Layout.astro';

/* Check if the user is authenticated */
const auth = getAuth(app);
if (Astro.cookies.has('session')) {
  const sessionCookie = Astro.cookies.get('session').value;
  const decodedCookie = await auth.verifySessionCookie(sessionCookie);
  if (decodedCookie) {
    return Astro.redirect('/dashboard');
  }
}
---

<Layout title="Sign in">
  <h1>Sign in</h1>
  <!-- <p>New here? <a href="/register">Create an account</a></p> -->
  <form action="/api/auth/signin" method="post">
    <label for="email" for="email">Email</label>
    <input type="email" name="email" id="email" />
    <label for="password">Password</label>
    <input type="password" name="password" id="password" />
    <button type="submit">Login</button>
  </form>
</Layout>
<script>
  import {
    getAuth,
    inMemoryPersistence,
    signInWithEmailAndPassword,
  } from 'firebase/auth';
  import { app } from '../firebase/client';

  const auth = getAuth(app);
  // This will prevent the browser from storing session data
  auth.setPersistence(inMemoryPersistence);

  const form = document.querySelector('form') as HTMLFormElement;
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    const email = formData.get('email')?.toString();
    const password = formData.get('password')?.toString();

    if (!email || !password) {
      return;
    }
    const userCredential = await signInWithEmailAndPassword(
      auth,
      email,
      password
    );
    const idToken = await userCredential.user.getIdToken();
    const response = await fetch('/api/auth/signin', {
      method: 'GET',
      headers: {
        Authorization: `Bearer ${idToken}`,
      },
    });

    if (response.redirected) {
      window.location.assign(response.url);
    }
  });
</script>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
    text-align: center;
  }

  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1em;
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    max-width: 400px;
    margin: 2rem auto;
  }
  label {
    font-weight: bold;
  }
  input {
    padding: 0.5rem;
    font-size: 1rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    border-radius: 4px;
    background: rgba(var(--accent-dark), 33%);
    color: white;
  }
  button {
    padding: 0.5rem 1rem;
    font-size: 1rem;
    background: rgba(var(--accent-dark), 33%);
    border: none;
    border-radius: 4px;
    color: white;
    cursor: pointer;
    transition: background 0.3s;
  }
  button:hover {
    background: grey;
  }
  a {
    color: rgb(var(--accent-light));
    text-decoration: underline;
  }
</style>
